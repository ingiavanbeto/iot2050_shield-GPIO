/* 
This sketch shows how to address the pins of the SIMATIC IOT2000 I/O Module. It contains an example for the basis functions (read and write the I/Os). 
This is not an expedient example - it just shows how to use functions of the SIMATIC IOT2000 I/O Module and how the pins of the shield are mapped to the GPIOs of the SIMATIC IOT2000. 

DI0 = D12
DI1 = D11
DI2 = D10 
DI3 = D9
DI4 = D4

DQ0 = D8
DQ1 = D7

U0 = A0
I0 = A1
U1 = A2
U2 = A3

U0 and U1 are analog inputs from 0..10V; 
I0 and I1 are analog inputs from 0..20mA;

You can take this information from the SIMATIC IOT2000 I/O Module manual as well. (https://support.industry.siemens.com/cs/ww/en/ps/6ES7647-0KA01-0AA2)

Before using the shield make sure that the left jumper on the IOT is set to the correct position! This is also described in the manual.

*/

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  constants won't change. They're used here to set the pin numbers of the DIGITAL INPUTS:
const int IOShield_DI0 = 12;     
const int IOShield_DI1 = 11;  
const int IOShield_DI2 = 10;
const int IOShield_DI3 = 9;
const int IOShield_DI4 = 4;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  constants won't change. They're used here to set the pin numbers of the DIGITAL OUTPUTS:
const int IOShield_DQ0 = 8;
const int IOShield_DQ1 = 7;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  constants won't change. They're used here to set the pin numbers of the ANALOG INPUTS:
const int IOShield_U0 = A0;  
const int IOShield_I0 = A1; 
const int IOShield_U1 = A2;  
const int IOShield_I1 = A3;  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// variables will change. They're initialized here to save the state of the DIGITAL INPUTS:
int value_DI0 = 0;
int value_DI1 = 0;
int value_DI2 = 0;
int value_DI3 = 0;
int value_DI4 = 0;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// variables will change. They're initialized here to save the values of the ANALOG INPUTS:
int value_U0 = 0;
int value_I0 = 0;
int value_U1 = 0;
int value_I1 = 0;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


void setup() {
  // put your setup code here, to run once:
  Serial.begin(9600);  // Open serial port 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// initialize the DIGITAL INPUTS as an input:
 pinMode(IOShield_DI0, INPUT);
 pinMode(IOShield_DI1, INPUT);
 pinMode(IOShield_DI2, INPUT);
 pinMode(IOShield_DI3, INPUT);
 pinMode(IOShield_DI4, INPUT);
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// initialize the DIGITAL OUTPUTS as an output:
 pinMode(IOShield_DQ0, OUTPUT);
 pinMode(IOShield_DQ1, OUTPUT);
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

void loop() {
  // put your main code here, to run repeatedly:
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// read out the state of the DIGITAL INPUTS:
  value_DI0 = digitalRead(IOShield_DI0);
  value_DI1 = digitalRead(IOShield_DI1);
  value_DI2 = digitalRead(IOShield_DI2);
  value_DI3 = digitalRead(IOShield_DI3);
  value_DI4 = digitalRead(IOShield_DI4);
 //print the state of the DIGITAL INPUTS
  Serial.print (value_DI0);
  Serial.print (value_DI1);
  Serial.print (value_DI2);
  Serial.print (value_DI3);
  Serial.print (value_DI4);
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// write the DIGITAL OUTPUTS (to true or false):
  digitalWrite(IOShield_DQ0, HIGH);
  digitalWrite(IOShield_DQ0, LOW);
  digitalWrite(IOShield_DQ1, HIGH);
  digitalWrite(IOShield_DQ1, LOW); 
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// read out the values of the ANALOG INPUTS:
  value_U0 = analogRead(IOShield_U0);
  value_I0 = analogRead(IOShield_I0);
  value_U1 = analogRead(IOShield_U1);
  value_I1 = analogRead(IOShield_I1);
//print the values of the ANALOG INPUTS
  Serial.print (value_U0);
  Serial.print (value_I0);
  Serial.print (value_U1);
  Serial.print (value_I1);  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
